AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'multi-tenant-saas-sam-serverless-typescript #magic___^_^___line Sample
  SAM Template for multi-tenant-saas-sam-serverless-typescript #magic___^_^___line

  '
Globals:
  Function:
    Timeout: 3
    MemorySize: 128
    Tracing: Active
    LoggingConfig:
      LogFormat: JSON
  Api:
    TracingEnabled: true
Resources:
  getAllItemsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/get-all-items.getAllItemsHandler
      Runtime: nodejs16.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP get method to get all items from
        a DynamoDB table.
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: SampleTable
      Environment:
        Variables:
          SAMPLE_TABLE:
            Ref: SampleTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /
            Method: GET
      CodeUri: getAllItemsFunction-Shared
    Metadata:
      SamResourceId: getAllItemsFunction
  getByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/get-by-id.getByIdHandler
      Runtime: nodejs16.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP get method to get one item by
        id from a DynamoDB table.
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: SampleTable
      Environment:
        Variables:
          SAMPLE_TABLE:
            Ref: SampleTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /{id}
            Method: GET
      CodeUri: getAllItemsFunction-Shared
    Metadata:
      SamResourceId: getByIdFunction
  putItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/put-item.putItemHandler
      Runtime: nodejs16.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP post method to add one item to
        a DynamoDB table.
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: SampleTable
      Environment:
        Variables:
          SAMPLE_TABLE:
            Ref: SampleTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /
            Method: POST
      CodeUri: getAllItemsFunction-Shared
    Metadata:
      SamResourceId: putItemFunction
  SampleTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2
  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: 'true'
  HelloWorldFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: HelloWorldFunction
      Handler: app.lambdaHandler
      Runtime: nodejs16.x
      Architectures:
      - x86_64
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /hello
            Method: get
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        EntryPoints:
        - app.ts
        Minify: true
        Target: es2020
      SamResourceId: HelloWorldFunction
  JoellambdaHandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: JoellambdaHandlerFunction
      Handler: app.JoellambdaHandler
      Runtime: nodejs16.x
      Architectures:
      - x86_64
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /test
            Method: get
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        EntryPoints:
        - app.ts
        Minify: true
        Target: es2020
      SamResourceId: JoellambdaHandlerFunction
Outputs:
  WebEndpoint:
    Description: API Gateway endpoint URL for Prod stage
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/
  HelloWorldApi:
    Description: API Gateway endpoint URL for Prod stage for Hello World function
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/
  HelloWorldFunction:
    Description: Hello World Lambda Function ARN
    Value:
      Fn::GetAtt:
      - HelloWorldFunction
      - Arn
  HelloWorldFunctionIamRole:
    Description: Implicit IAM Role created for Hello World function
    Value:
      Fn::GetAtt:
      - HelloWorldFunctionRole
      - Arn
  JoellambdaHandlerFunctionApi:
    Description: API Gateway endpoint URL for Prod stage for joel handler function
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/dev/hello/
  JoellambdaHandlerFunction:
    Description: JoelHandler Lambda Function ARN
    Value:
      Fn::GetAtt:
      - JoellambdaHandlerFunction
      - Arn
  JoellambdaHandlerFunctionIamRole:
    Description: Implicit IAM Role created for joel handler function
    Value:
      Fn::GetAtt:
      - JoellambdaHandlerFunctionRole
      - Arn
